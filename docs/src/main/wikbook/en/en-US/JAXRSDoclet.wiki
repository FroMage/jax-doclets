h1. JAX-RS doclet documentation

The JAX-RS doclet generates documentation for your RESTful service based on JAX-RS annotations and JavaDoc comments
on your JAX-RS resource methods.

h2. Where should you write JavaDoc

JavaDoc is read either on the JAX-RS resource methods, or their interface. Only method-level
JavaDoc is used. Documentation for a given RESTful URL is taken from the method annotated with {{@GET}},
{{@HEAD}}, {{@POST}}, {{@PUT}} or {{@DELETE}}
for that URL (in order of preference).

JAX-RS resource locators, including Class factory resource locators (resource locator methods with a {{Class<?>}} return type) are supported.

{note}Since the JAX-RS supports links to JAXB documentation, you should first run the JAXB doclet, then
the JAX-RS doclet using the [{{-link}}|#-link] parameter.{note}

h2. Supported standard JavaDoc tags

The following standard JavaDoc tags are supported on resource methods:

||Tag||Function||
|{{@param \{name\} \{doc\} }}|This is used to document the corresponding resource method parameters annotated with {{@PathParam}}, {{@QueryParam}} or {{@MatrixParam}}. Can be used at most once per parameter name.|
|{{@return \{doc\} }}|Documents the entity returned from this resource method. Can only be used once.|
|{{@link \{DTO/resource class/resource class#method\} }} | Inline linking to DTO objects, resources and resource methods to be linked to. |

h2. Linking in JAX-RS JavaDoc

The following types of {{@link}} links are supported:
* Links to a DTO object type - 
* Links to a resource class - produces a link to the resource summary, with the resource URL as the link text (e.g. {{/rest/resource}}).
* Links to a resource method - produces a link to the resource method summary, with the resource method and URL as the link text (e.g. {{GET /rest/resource}}).

h2. Supported specific JavaDoc tags

The following specific JavaDoc tags are supported on resource methods:

||Tag||Function||
|{{@HTTP \{code\} \{doc\}}}|This is used to document the codes that the method can return. Can be used multiple times.|
|{{@inputWrapped \{fq-classname\} }}|Specifies the real type of input when declared as a {{String}} parameter. Can only be used once.|
|{{@returnWrapped \{fq-classname\} \{doc\} }}|Used in place of {{@return}} when output type is {{String}}, {{void}} or {{Response}} to specify the real type of output and documentation for each possible type. Can be used multiple times.|
|{{@RequestHeader \{header\} \{doc\} }}|This is used to document HTTP request headers. Can be used multiple times.|
|{{@ResponseHeader \{header\} \{doc\} }}|This is used to document HTTP response headers. Can be used multiple times.|
|{{@include \{file\} }}|Includes the specified relative file in the resource documentation. Can be used multiple times.|
|{{@exclude}}|Excludes the annotated method or resource from generated documentation. If a resource is excluded, none of its methods will appear in the documentation either.|

h2. Supported JAX-RS annotations

The following standard JAX-RS annotations are supported on resource methods or classes:
    
* {{@Path}}
* {{@PathParam}}
* {{@FormParam}}
* {{@CookieParam}}
* {{@HeaderParam}}
* {{@QueryParam}}
* {{@MatrixParam}}
* {{@Produces}}
* {{@Consumes}}
* {{@Context}} (ignored)
    
h2. Supported RESTEasy JAX-RS extension annotations

If the optional RESTEasy dependency is present,
the following RESTEasy annotations are supported on resource methods or classes:

* {{@Form}}

h2. POJO Mapping

Some JAX-RS frameworks (e.g. Jersey) support the use of POJO style JSON serialization/deserialization.
To support this, the JAX-RS doclet provides a POJO JSON documentation mode (enabled using the {{-pojojson}} configuration option, and associated configuration options). 

When POJO JSON documentation mode is enabled, the objects used in resource methods will be documented as POJO objects, unless they are already documented in linked documentation (e.g. standard Java types, or JAXB Doclet documentation).

The following items are documented:
* DTO object types (including linking in JavaDoc)
* JavaBean style properties
* Generic and parameter types (used in properties or as type parameters in DTO types)
* Enumerated types
* Subclasses of DTO object types (polymorphic DTOs)

A separate Data objects page is added to the top level menu when POJO JSON documentation mode is enabled.

h3. Supported Jackson Features

In the POJO JSON documentation mode, the following annotations will be detected on property accessors, and will suppress documentation for that property:
* {{org.codehaus.jackson.annotate.JsonIgnore}} (Jackson 1.x)
* {{com.fasterxml.jackson.annotation.JsonIgnore}} (Jackson 2.x)
